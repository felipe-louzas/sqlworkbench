/*
 * This file is part of SQL Workbench/J, https://www.sql-workbench.eu
 *
 * Copyright 2002-2024 Thomas Kellerer
 *
 * Licensed under a modified Apache License, Version 2.0
 * that restricts the use for certain governments.
 * You may not use this file except in compliance with the License.
 * You may obtain a copy of the License at.
 *
 *     https://www.sql-workbench.eu/manual/license.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * To contact the author please send an email to: support@sql-workbench.eu
 *
 */
package workbench.gui.settings;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

import workbench.interfaces.Disposable;
import workbench.interfaces.Restoreable;
import workbench.log.LogMgr;
import workbench.resource.ResourceMgr;
import workbench.resource.Settings;

import workbench.util.StringUtil;
import workbench.util.WbFile;

/**
 *
 * @author  Thomas Kellerer
 */
public class LoggingOptionsPanel
  extends JPanel
  implements Restoreable, Disposable
{
  public LoggingOptionsPanel()
  {
    super();
    initComponents();
    if (LogMgr.isTraceEnabled())
    {
      DefaultComboBoxModel model = (DefaultComboBoxModel)logLevel.getModel();
      model.addElement("TRACE");
    }
  }

  @Override
  public void restoreSettings()
  {
    logLevel.setSelectedItem(LogMgr.getLevel());
    logAllStatements.setSelected(Settings.getInstance().getLogAllStatements());
    logMetaSQL.setSelected(Settings.getInstance().getDebugMetadataSql());
    obfuscateDbInfo.setSelected(Settings.getInstance().getObfuscateLogInformation());
    WbFile logFile = LogMgr.getLogfile();
    if (logFile == null)
    {
      logFileName.setText("");
    }
    else
    {
      logFileName.setText(logFile.getFullPath());
    }
  }

  @Override
  public void saveSettings()
  {
    Settings set = Settings.getInstance();
    set.setLogAllStatements(logAllStatements.isSelected());
    set.setDebugMetadataSql(logMetaSQL.isSelected());
    set.setObfuscateLogInformation(obfuscateDbInfo.isSelected());
    String level = (String)logLevel.getSelectedItem();
    LogMgr.setLevel(level);
    set.setProperty("workbench.log.level", level);

    WbFile currentLogFile = LogMgr.getLogfile();

    String newLogName = StringUtil.trimToNull(logFileName.getText());
    if (newLogName != null)
    {
      WbFile newFile = new WbFile(newLogName);
      if (!newFile.equals(currentLogFile))
      {
        int maxSize = set.getMaxLogfileSize();
        int backups = set.getLogfileBackupCount();
        Settings.getInstance().setLogFilename(newFile.getFullPath());
        LogMgr.setOutputFile(newFile, maxSize, backups);
      }
    }
  }

  @Override
  public void dispose()
  {
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    GridBagConstraints gridBagConstraints;

    logLevelLabel = new JLabel();
    logLevel = new JComboBox();
    logAllStatements = new JCheckBox();
    logMetaSQL = new JCheckBox();
    obfuscateDbInfo = new JCheckBox();
    jLabel1 = new JLabel();
    logFileName = new JTextField();

    setLayout(new GridBagLayout());

    logLevelLabel.setText(ResourceMgr.getString("LblLogLevel")); // NOI18N
    logLevelLabel.setToolTipText(ResourceMgr.getString("d_LblLogLevel")); // NOI18N
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new Insets(7, 0, 0, 0);
    add(logLevelLabel, gridBagConstraints);

    logLevel.setModel(new DefaultComboBoxModel(new String[] { "ERROR", "WARNING", "INFO", "DEBUG" }));
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new Insets(7, 10, 0, 10);
    add(logLevel, gridBagConstraints);

    logAllStatements.setText(ResourceMgr.getString("LblLogAllSql")); // NOI18N
    logAllStatements.setToolTipText(ResourceMgr.getString("d_LblLogAllSql")); // NOI18N
    logAllStatements.setBorder(null);
    logAllStatements.setHorizontalAlignment(SwingConstants.LEFT);
    logAllStatements.setHorizontalTextPosition(SwingConstants.RIGHT);
    logAllStatements.setIconTextGap(5);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    gridBagConstraints.insets = new Insets(7, 0, 5, 0);
    add(logAllStatements, gridBagConstraints);

    logMetaSQL.setText(ResourceMgr.getString("LblLogMetaSql")); // NOI18N
    logMetaSQL.setToolTipText(ResourceMgr.getString("d_LblLogMetaSql")); // NOI18N
    logMetaSQL.setBorder(null);
    logMetaSQL.setHorizontalAlignment(SwingConstants.LEFT);
    logMetaSQL.setHorizontalTextPosition(SwingConstants.RIGHT);
    logMetaSQL.setIconTextGap(5);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    gridBagConstraints.insets = new Insets(3, 0, 5, 0);
    add(logMetaSQL, gridBagConstraints);

    obfuscateDbInfo.setText(ResourceMgr.getString("LblObfuscateDbInfo")); // NOI18N
    obfuscateDbInfo.setToolTipText(ResourceMgr.getString("d_LblObfuscateDbInfo")); // NOI18N
    obfuscateDbInfo.setBorder(null);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.WEST;
    gridBagConstraints.insets = new Insets(4, 0, 2, 0);
    add(obfuscateDbInfo, gridBagConstraints);

    jLabel1.setText("Logfile");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    gridBagConstraints.insets = new Insets(6, 0, 0, 0);
    add(jLabel1, gridBagConstraints);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.LINE_START;
    gridBagConstraints.insets = new Insets(6, 10, 0, 15);
    add(logFileName, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JLabel jLabel1;
  private JCheckBox logAllStatements;
  private JTextField logFileName;
  private JComboBox logLevel;
  private JLabel logLevelLabel;
  private JCheckBox logMetaSQL;
  private JCheckBox obfuscateDbInfo;
  // End of variables declaration//GEN-END:variables

}
